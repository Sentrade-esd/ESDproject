
########################
### user service #######
########################

# network policy
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-port-6000
  namespace: esd-project
spec:
  podSelector:
    matchLabels:
      app: user-service  # changed here
  policyTypes:
  - Ingress
  ingress:
  - from: []
    ports:
    - protocol: TCP
      port: 6000

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-service-deployment  # changed here
  namespace: esd-project
spec:
  replicas: 1
  selector:
    matchLabels:
      app: user-service  # changed here
  template:
    metadata:
      labels:
        app: user-service  # changed here
    spec:
      containers:
      - name: user-service  # changed here
        image: docker.io/chernise/esdproject-user_service:latest  # changed here
        ports:
        - containerPort: 6000
        # command: ["gunicorn"]
        # args: ["-w", "1", "--threads", "2", "-b", ":6000", "--timeout", "600", "User:app"]
        command: ["/bin/sh", "-c"]
        args: ["pip install mysql-connector-python && gunicorn -w 1 --threads 2 -b :6000 --timeout 600 User:app"]

---

apiVersion: v1
kind: Service
metadata:
  name: user-service  # changed here
  namespace: esd-project
spec:
  type: ClusterIP
  selector:
    app: user-service  # changed here
  ports:
    - protocol: TCP
      port: 6000
      targetPort: 6000

---
########################
########## user db #####
########################

#sample volume
# apiVersion: v1
# kind: PersistentVolumeClaim
# metadata:
#   name: app-volume-claim
#   namespace: esd-project
# spec:
#   storageClassName: standard-rwo
#   accessModes:
#     - ReadWriteOnce
#   resources:
#     requests:
#       storage: 18Gi

kind: PersistentVolume
apiVersion: v1
metadata:
  name: user-db-volume
  namespace: esd-project
spec:
  storageClassName: manual
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: "/opt/postgres-data"
---
#volume 
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: user-db-volume
  namespace: esd-project
spec:
  storageClassName: standard-rwo
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
# network policy
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-port-5432
  namespace: esd-project
spec:
  podSelector:
    matchLabels:
      app: user-db
  policyTypes:
  - Ingress
  ingress:
  - from: []
    ports:
    - protocol: TCP
      port: 5432

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-db-deployment
  namespace: esd-project
spec:
  replicas: 1
  selector:
    matchLabels:
      app: user-db
  template:
    metadata:
      labels:
        app: user-db
    spec:
      containers:
      - name: user-db
        image: docker.io/chernise/esdproject-user_db:latest
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_USER
          value: "postgres"
        - name: POSTGRES_PASSWORD
          value: "root"
        - name: POSTGRES_DB
          value: "user_db"
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        volumeMounts:
        - name: user-db-volume
          mountPath: /var/lib/postgresql/data/
      
      volumes:
      - name: user-db-volume
        persistentVolumeClaim:
          claimName: user-db-volume

---

apiVersion: v1
kind: Service
metadata:
  name: user-db
  namespace: esd-project
spec:
  type: ClusterIP
  selector:
    app: user-db
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
