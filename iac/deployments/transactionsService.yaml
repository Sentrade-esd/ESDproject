
########################
### transactions #######
########################

# network policy
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-port-6002
  namespace: esd-project
spec:
  podSelector:
    matchLabels:
      app: transactions  # changed here
  policyTypes:
  - Ingress
  ingress:
  - from: []
    ports:
    - protocol: TCP
      port: 6002

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: transactions-deployment  # changed here
  namespace: esd-project
spec:
  replicas: 1
  selector:
    matchLabels:
      app: transactions  # changed here
  template:
    metadata:
      labels:
        app: transactions  # changed here
    spec:
      containers:
      - name: transactions  # changed here
        image: docker.io/cherise/esdproject-transactions:latest  # changed here
        ports:
        - containerPort: 6002
      command: ["gunicorn"]
      args: ["-w", "1", "--threads", "2", "-b", ":6002", "--timeout", "600", "transaction:app"]
      env:
        - name: SQL_URI
          value: "postgresql://postgres:root@transactions-db:5432"
        - name: PORT
          value: "6002"

---

apiVersion: v1
kind: Service
metadata:
  name: transactions  # changed here
  namespace: esd-project
spec:
  type: LoadBalancer
  selector:
    app: transactions  # changed here
  ports:
    - protocol: TCP
      port: 6002
      targetPort: 6002

---

########################
## transactions db #####
########################

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: transactions-db-volume
  namespace: esd-project
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi

---

# network policy
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-port-5432
  namespace: esd-project
spec:
  podSelector:
    matchLabels:
      app: transactions-db
  policyTypes:
  - Ingress
  ingress:
  - from: []
    ports:
    - protocol: TCP
      port: 5432

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: transactions-db-deployment
  namespace: esd-project
spec:
  replicas: 1
  selector:
    matchLabels:
      app: transactions-db
  template:
    metadata:
      labels:
        app: transactions-db
    spec:
      containers:
      - name: transactions-db
        image: postgres:latest
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_USER
          value: "postgres"
        - name: POSTGRES_PASSWORD
          value: "password"
        - name: POSTGRES_DB
          value: "transactions_db"
        volumeMounts:
        - name: transactions-db-volume
          mountPath: /var/lib/postgresql/data

---

apiVersion: v1
kind: Service
metadata:
  name: transactions-db
  namespace: esd-project
spec:
  type: ClusterIP
  selector:
    app: transactions-db
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
      




# transactions:
#   image: chernise/esdproject-transactions:latest
#   command: gunicorn -w 1 --threads 2 -b :6002 --timeout 600 transaction:app
#   hostname: transactions
#   ports:
#     - "6002:6002"
#   environment:
#     - SQL_URI=postgresql://postgres:root@transactions_db:5432
#     - PORT=6002
#   networks:
#     - transactions_network
#     - kong_network
#     - sentiment_network
#     - follow_trades_network

# transactions_db:
#   image: chernise/esdproject-transactions_db:latest
#   hostname: transactions_db
#   restart: unless-stopped
#   ports:
#     - 5433:5432
#   environment:
#     POSTGRES_PASSWORD: root
#     POSTGRES_USER: postgres
#     POSTGRES_DB: transactions_db
#     PGDATA: /var/lib/postgresql/data/pgdata
#   volumes:
#     - transactions_db:/var/lib/postgresql/data
#   networks:
#     - transactions_network

# --------------------------------------

# ########################
# ### user service #######
# ########################

# # network policy
# apiVersion: networking.k8s.io/v1
# kind: NetworkPolicy
# metadata:
#   name: allow-port-6000
#   namespace: esd-project
# spec:
#   podSelector:
#     matchLabels:
#       app: user-service  # changed here
#   policyTypes:
#   - Ingress
#   ingress:
#   - from: []
#     ports:
#     - protocol: TCP
#       port: 6000

# ---

# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: user-service-deployment  # changed here
#   namespace: esd-project
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: user-service  # changed here
#   template:
#     metadata:
#       labels:
#         app: user-service  # changed here
#     spec:
#       containers:
#       - name: user-service  # changed here
#         image: docker.io/chernise/esdproject-user_service:latest  # changed here
#         ports:
#         - containerPort: 6000
#       command: ["gunicorn"]
#       args: ["-w", "1", "--threads", "2", "-b", ":6000", "--timeout", "600", "user:app"]

# ---

# apiVersion: v1
# kind: Service
# metadata:
#   name: user-service  # changed here
#   namespace: esd-project
# spec:
#   type: LoadBalancer
#   selector:
#     app: user-service  # changed here
#   ports:
#     - protocol: TCP
#       port: 6000
#       targetPort: 6000

# ---
# ########################
# ########## user db #####
# ########################

# #volume 
# apiVersion: v1
# kind: PersistentVolumeClaim
# metadata:
#   name: user-db-volume
#   namespace: esd-project
# spec:
#   accessModes:
#     - ReadWriteOnce
#   resources:
#     requests:
#       storage: 10Gi
# ---
# # network policy
# apiVersion: networking.k8s.io/v1
# kind: NetworkPolicy
# metadata:
#   name: allow-port-5432
#   namespace: esd-project
# spec:
#   podSelector:
#     matchLabels:
#       app: user-db
#   policyTypes:
#   - Ingress
#   ingress:
#   - from: []
#     ports:
#     - protocol: TCP
#       port: 5432

# ---

# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: user-db-deployment
#   namespace: esd-project
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: user-db
#   template:
#     metadata:
#       labels:
#         app: user-db
#     spec:
#       containers:
#       - name: user-db
#         image: postgres:latest
#         ports:
#         - containerPort: 5432
#         env:
#         - name: POSTGRES_USER
#           value: "postgres"
#         - name: POSTGRES_PASSWORD
#           value: "password"
#         - name: POSTGRES_DB
#           value: "user_db"
#         volumeMounts:
#         - name: user-db-volume
#           mountPath: /var/lib/postgresql/data

# ---

# apiVersion: v1
# kind: Service
# metadata:
#   name: user-db
#   namespace: esd-project
# spec:
#   type: ClusterIP
#   selector:
#     app: user-db
#   ports:
#     - protocol: TCP
#       port: 5432

# # user_service:
# #     image: chernise/esdproject-user_service:latest
# #     command: gunicorn -w 1 --threads 2 -b :6000 --timeout 600 User:app
# #     hostname: user_service
# #     ports:
# #       - "6000:6000"
# #     environment:
# #       - SQL_URI=postgresql://postgres:root@user_db:5432
# #     networks:
# #       - user_network
# #       - kong_network
# #     restart: unless-stopped

# #   user_db:
# #     image: chernise/esdproject-user_db:latest
# #     hostname: user_db
# #     ports:
# #       - 5432:5432
# #     environment:
# #       POSTGRES_PASSWORD: root
# #       POSTGRES_USER: postgres
# #       POSTGRES_DB: user_db
# #       PGDATA: /var/lib/postgresql/data/pgdata
# #     volumes:
# #       - user_db_data:/var/lib/postgresql/data
# #     networks:
# #       - user_network
# #     restart: unless-stopped