# volume
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: scraper-db-volume
  namespace: esd-project
spec:
  storageClassName: standard-rwo
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---

# netowrk policy
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-port-27017
  namespace: esd-project
spec:
  podSelector:
    matchLabels:
      app: scraper-db
  policyTypes:
  - Ingress
  ingress:
  - from: []
    ports:
    - protocol: TCP
      port: 27017

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: scraper-db-deployment
  namespace: esd-project
spec:
  replicas: 1
  selector:
    matchLabels:
      app: scraper-db
  template:
    metadata:
      labels:
        app: scraper-db
    spec:
      containers:
      - name: scraper-db
        image: docker.io/chernise/esdproject-scraper_db:latest
        ports:
        - containerPort: 27017
        env:
        - name: MONGO_INITDB_DATABASE
          value: "scraper"
        - name: MONGO_INITDB_ROOT_USERNAME
          value: "root"
        - name: MONGO_INITDB_ROOT_PASSWORD
          value: "root"
        volumeMounts:
        - name: scraper-db-volume
          mountPath: /data/db
      
      volumes:
      - name: scraper-db-volume
        persistentVolumeClaim:
          claimName: scraper-db-volume
          

---
apiVersion: v1
kind: Service
metadata:
  name: scraper-db
  namespace: esd-project
spec:
  type: ClusterIP
  selector:
    app: scraper-db
  ports:
    - protocol: TCP
      port: 27017
      targetPort: 27017

---
########################
###### scraper  #####
########################

# netowrk policy
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-port-5000
  namespace: esd-project
spec:
  podSelector:
    matchLabels:
      app: scraper
  policyTypes:
  - Ingress
  ingress:
  - from: []
    ports:
    - protocol: TCP
      port: 5000
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: scraper-deployment
  namespace: esd-project
spec:
  replicas: 1
  selector:
    matchLabels:
      app: scraper
  template:
    metadata:
      labels:
        app: scraper
    spec:
      containers:
      - name: scraper
        image: docker.io/chernise/esdproject-scraper:latest
        ports:
        - containerPort: 5000
        env:
        - name: ALPHA_VANTAGE_API_KEY
          value: "youralphavantageapikey"
        - name: PORT
          value: "5000"
        - name: DB_URL
          value: "scraper-db:27017"

---
apiVersion: v1
kind: Service
metadata:
  name: scraper
  namespace: esd-project
spec:
  type: LoadBalancer
  selector:
    app: scraper
  ports:
    - protocol: TCP
      port: 5000
      targetPort: 5000




