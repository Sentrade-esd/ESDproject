{"ast":null,"code":"var _jsxFileName = \"C:\\\\ESD\\\\Web UI\\\\web_ui\\\\src\\\\Components\\\\Search.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Search() {\n  _s();\n  const [search, setSearch] = useState('');\n  const [results, setResults] = useState([]);\n  const searchInputRef = useRef();\n  const clearSearch = () => {\n    setSearch('');\n    searchInputRef.current.focus();\n    setResults([]);\n  };\n  const performSearch = query => {\n    // Replace this with actual API call or search within your data\n    // Here as a mock, we randomly return array of 10 results\n    return new Promise(resolve => {\n      setTimeout(() => {\n        resolve(Array(10).fill(0).map((_, i) => `Result ${i + 1}`));\n      }, 2000);\n    });\n  };\n  const handleSearchChange = async e => {\n    const value = e.target.value;\n    setSearch(value);\n    if (value) {\n      const res = await performSearch(value);\n      setResults(res);\n    } else {\n      setResults([]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Just imagine the search box works\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group rounded\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"search\",\n        className: \"form-control rounded\",\n        placeholder: \"Search for a Company here to find out more about it!\",\n        value: search,\n        onChange: handleSearchChange,\n        ref: searchInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: clearSearch,\n        className: \"input-group-text border-0\",\n        id: \"search-addon\",\n        \"aria-label\": \"Clear search field\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-search\",\n          \"aria-hidden\": \"true\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), results.map((result, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: result\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 45\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n_s(Search, \"GrIYzL3uRd5Z6sMNiMgvYiPqCwg=\");\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","useRef","Row","Col","jsxDEV","_jsxDEV","Search","_s","search","setSearch","results","setResults","searchInputRef","clearSearch","current","focus","performSearch","query","Promise","resolve","setTimeout","Array","fill","map","_","i","handleSearchChange","e","value","target","res","children","fileName","_jsxFileName","lineNumber","columnNumber","className","type","placeholder","onChange","ref","onClick","id","result","index","_c","$RefreshReg$"],"sources":["C:/ESD/Web UI/web_ui/src/Components/Search.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport Row from \"react-bootstrap/Row\"\r\nimport Col from \"react-bootstrap/Col\"\r\n\r\nfunction Search() {\r\n    const [search, setSearch] = useState('');\r\n    const [results, setResults] = useState([]);\r\n    const searchInputRef = useRef();\r\n\r\n    const clearSearch = () => {\r\n        setSearch('');\r\n        searchInputRef.current.focus();\r\n        setResults([]);\r\n    };\r\n\r\n    const performSearch = (query) => {\r\n        // Replace this with actual API call or search within your data\r\n        // Here as a mock, we randomly return array of 10 results\r\n        return new Promise(resolve => {\r\n            setTimeout(() => {\r\n                resolve(Array(10).fill(0).map((_, i) => `Result ${i + 1}`));\r\n            }, 2000);\r\n        });\r\n    }\r\n\r\n    const handleSearchChange = async(e) => {\r\n        const value = e.target.value;\r\n        setSearch(value);\r\n        if (value) {\r\n            const res = await performSearch(value);\r\n            setResults(res);\r\n        } else {\r\n            setResults([]);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Just imagine the search box works</h1>\r\n            <div className=\"input-group rounded\">\r\n                <input type=\"search\" className=\"form-control rounded\" placeholder=\"Search for a Company here to find out more about it!\"\r\n                    value={search} onChange={handleSearchChange} ref={searchInputRef} />\r\n                <button onClick={clearSearch} className=\"input-group-text border-0\" id=\"search-addon\" aria-label=\"Clear search field\">\r\n                    <i className=\"fas fa-search\" aria-hidden=\"true\"></i>\r\n                </button>\r\n            </div>\r\n            {results.map((result, index) => <p key={index}>{result}</p>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}